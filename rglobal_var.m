global thhd pio6rw nikki output_dir var_name_set var_ename_set ...
   var_req_set var_unit_set var_range var_linORlog l_da ampORbin bintype ...
   conf2grid script_name islink

% model configs
addpath('ramsfuncs/')
ampORbin={'amp' 'bin'};
bintype={'tau' 'sbm'};

ampbin_lsty = {'--','-'};
ampbin_lwid = [2 1];

pio6rw=3.1415926535/6*1000;

% thresholds to be considered as clouds 
thhd.cloud_mr_th=[1e-7 1e-2]; % g/kg, threshold for mixing ratio
thhd.rain_mr_th=[1e-8 1e-2];
thhd.cloud_n_th=[1e-1 inf]; % #/cc, threshold for droplet number concentration
thhd.rain_n_th=[1e-4 inf];
thhd.cwp_th=[1 inf]; % g/m2 cloud water path threshold
thhd.rwp_th=[1e-1 inf]; % g/m2 rain water path threshold
thhd.meanD_th=[0 inf];
thhd.sppt_th=[0 inf]; % mm/hr surface precipitation

% set the current date as nikki if unset
if ~exist('nikki')
    nikki=datestr(date,'YYYY-mm-dd');
end

% convert iconf to grid location
conf2grid = {[1,1], [1,2], [1,3], [1,4], [1,5], ...
                    [2,2], [2,3], [2,4], [2,5], ...
                           [3,3], [3,4], [3,5], ...
                                  [4,4], [4,5], ...
                                         [5,5], ...
            };

% dir of the model output
% output_dir='/Volumes/ESSD/AMP output/';
% output_dir='../github/rams/output/';
%% determine if the file is linked
islink = ~unix(['test -L ',script_name,'.m']);

if islink
   output_dir='../UvsS_RAMS/';
else
   output_dir='/group/aigelgrp2/arthurhu/RAMS/';
end

% load these python colormap
ngrad=21;

try
   load('cmaps.mat')
end

if ~exist('cmaps','var')
   cmaps.Blues=getPyPlot_cMap('Blues',10);
   cmaps.Blues_s=getPyPlot_cMap('Blues');
   cmaps.rainbow=getPyPlot_cMap('rainbow',20);
   cmaps.coolwarm=getPyPlot_cMap('coolwarm',10);
   cmaps.coolwarm_11=getPyPlot_cMap('coolwarm',11);
   cmaps.coolwarm_s=getPyPlot_cMap('coolwarm');
   cmaps.coolwarm_r=getPyPlot_cMap('coolwarm_r',10);
   cmaps.coolwarm_r11=getPyPlot_cMap('coolwarm_r',11);
   cmaps.BrBG20=getPyPlot_cMap('BrBG',20);
   cmaps.BrBG=getPyPlot_cMap('BrBG',ngrad)*.9;
   cmaps.BrBG=repelem(cmaps.BrBG,floor(256/ngrad),1); 
   cmaps.flag3 = cmaps.coolwarm_r11([6 9 2],:);
   cmaps.flag3(1,:) = [1, 1, 1];
end

colororder=colororder;
color_order={};
for i=1:size(colororder,1)
   color_order{i}=colororder(i,:);
end

%% initial variables key-values
initvarSet = {'a','w','dm','rh','sp','mc','cm','dmr','pmomx','pmomy','spc','spr',...
   'pmomxy','dz','Na','spcr','sprc'};
fullnameSet = {'Aerosol concentration', 'Maximum vertical velocity',...
   'Mean mass diameter', 'Relative humidity', 'Shape parameter (\nu)', ...
   'Initial mass content','Cloud mass','Mean mass diameter (rain)',...
   'Predicted Moment X', 'Predicted Moment Y','Shape parameter (L1)', ...
   'Shape parameter (L2)','Predicted Moments M_x-M_y','Cloud thickness','Aerosol Concentration',...
   'Assumed Shape Parameter \nu_1-\nu_2','Shape parameter \nu_2-\nu_1'};
symbolSet = {'N_a', 'w_{max}', 'D_m', 'RH', '\nu', 'm_i', 'm_c', 'D_mr','M^p_x',...
   'M^p_y','\nu_c','\nu_r','M^p_{xy}','\Deltaz cloud','N_a','nu_1-nu_2','nu_2-nu_1'};
unitSet = {' [/mg]', ' [m/s]', ' [\mum]', ' [%]', '', ' [g/kg]', ' [g/kg]', ...
   ' [\mum]', '', '','','','',' [m]',' [/mg]','',''};
initVarName_dict = containers.Map(initvarSet, fullnameSet);
initVarSymb_dict = containers.Map(initvarSet, symbolSet);
initVarUnit_dict = containers.Map(initvarSet, unitSet);

clear colororder

% variables: {{{
var_name_set = {'CWP','RWP','LWP',...
                'CWC','RWC','LWC',...
                'CNP','RNP','LNP',...
                'CNC','RNC','LNC',...
                'Rv','RH', ...
                'DSDm', 'DSDn','reldisp', ...
                'flagc','flagr',...
                'pres', 'temp', 'w',...
                'cloud_frac', 'meandc', 'meandr', ...
                'nu_c','nu_r',...
                'Dn_c','Dn_r',...
                'momc3','momr3',...
                'SS', 'wp_advdif','wp_cond','wp_theta',...
                'SPR','ppt','accppt'...
                'SWUP','SWDN','LWUP','LWDN',...
                };
var_ename_set = {'cloud water path','rain water path','Liquid Water Path',... 3
                 'cloud water content','rain water content','liquid water content',... 6
                 'cloud num. path','rain num. path','liquid num. path',... 9
                 'cloud num. conc.','rain num. conc.','liquid num. conc.',... 12
                 'mixing ratio','relative humidity',... 14
                 'DSD mass', 'DSD number', 'relative dispersion', ... 17
                 'flag (cloud)', 'flag (rain)', ... 19
                 'pressure', 'temperature', 'vertical velocity'... 22
                 'cloud frac', 'D_{mc}', 'D_{mr}', ... 25
                 'nu_c','nu_r', ... 27
                 'Dn_c','Dn_r',... 29
                 'momc3','momr3',...31
                 'supersaturation', 'wp adv','wp cond','wp theta'... 35
                 'Surface Precipitation Rate', 'precip. rate','accumulated precip.'... 38
                 'Upwelling Shortwave','Downwelling Shortwave',... 40
                 'Upwelling Longwave','Downwelling Longwave',... 42
                 };
var_req_set = {{'RCP'},{'RRP'},{'RCP','RRP'},...
               {'RCP'},{'RRP'},{'RCP','RRP'},...
               {'CCP'}, {'CRP'}, {'CCP','CRP'}, ... 
               {'CCP'}, {'CRP'}, {'CCP','CRP'}, ... 
               {'RV'},{'RV'}, ...
               {'FFCD'},{'FFCDN'},{'RELDISP'},...
               {'GUESSC3'}, {'GUESSR3'}, ...
               {'PI'},{'THETA'},{'WP'}, ...
               {'GUESSC6'}, {'RCP','CCP'}, {'RRP','CRP'}, ...
               {'GUESSC1'}, {'GUESSR1'}, ...
               {'GUESSC2'}, {'GUESSR2'}, ...
               {'DMOMC3'}, {'DMOMR3'}, ...
               {'RV'},{'WP_ADVDIF'},{'WP_BUOY_COND'},{'WP_BUOY_THETA'},...
               {'PCPRR'}, {'PCPVR'}, {'ACCPR'},...
               {'SWUP'},{'SWDN'},{'LWUP'},{'LWDN'},...
               };
var_unit_set = {' [g/m^2]', ' [g/m^2]',' [g/m^2]', ...
                ' [g/kg]', ' [g/kg]', ' [g/kg]', ...
                ' [1/m^2]', ' [1/m^2]', ' [1/m^2]', ...
                ' [1/kg]', ' [1/kg]', ' [1/kg]', ...
                ' [kg/kg]',' %', ...
                ' [kg/kg]', ' [1/kg]', '', ...
                '','',...
                ' [hPa]', ' [K]', ' [m/s]'...
                '', ' [\mum]', ' [\mum]', ...
                '','',...
                ' [m]', ' [m]',...
                '','',...
                '',' [m/s]',' [m/s]',' [m/s]',...
                ' [mm/hr]', ' [mm/hr]', ' [mm]', ...
                ' [W/m^2]', ' [W/m^2]',' [W/m^2]',' [W/m^2]',...
                };
var_range = {[1e-2 1e4],[1e-2 1e4],[1e-2 1e4], ...
             [1e-5 1e0], [1e-5 1e0], [1e-5 1e0], ...
             [],[],[], ...
             [],[],[], ...
             [],[], ...
             [],[],[0 1], ...
             [-1 1], [-1 1], ...
             [], [], [-.03 .03], ...
             [0 1], [0 80], [80 1000], ...
             [],[],...
             [1e-7 1e-5],[1e-6 1e-3],...
             [],[],...
             [-2 2], [-.03 .03], [-0.03 .03], [-0.03 .03], ...
             [], [],[],...
             [],[],[],[],...
             };
var_linORlog = {'log', 'log', 'log', ...
                'log', 'log', 'log', ...
                'log', 'log', 'log', ...
                'log', 'log', 'log', ...
                'lin', 'lin', ...
                'log', 'log', 'lin', ...
                'lin', 'lin', ...
                'lin', 'lin', 'lin', ...
                'lin', 'lin', 'log',...
                'lin','lin',...
                'log','log',...
                'log','log',...
                'lin', 'lin', 'lin', 'lin', ...
                'lin', 'lin','lin', ...
                'lin', 'lin', 'lin', 'lin', ...
                };
% }}}

momcombo_trimmed = {};
momx = [2 4 5 6];
momy = [2 4 5 6];
imc = 0;

for imomx = 1:length(momx)
   for imomy = imomx+1:length(momy)
      imc = imc + 1;
      momcombo_trimmed{imc} = [num2str(momx(imomx)), '-', num2str(momy(imomy))];
   end
end

sp_combo=readmatrix('/home/arthurhu/github/rams/bin.rams.amp/sp_combo.csv');

% Convert the matrix to a cell of sp_combo_str
sp_combo_str = cellstr(num2str(sp_combo, '%g '));
% Remove leading spaces and replace spaces with a dash
for i = 1:length(sp_combo_str)
   % Remove leading and trailing spaces
   sp_combo_str{i} = strtrim(sp_combo_str{i});

   % Replace one or more spaces with a dash
   sp_combo_str{i} = regexprep(sp_combo_str{i}, '\s+', '-');
end

% output dir for the figures
plot_dir=['plots/rams/' nikki '/'];
if ~exist(plot_dir,'dir')
   mkdir(plot_dir)
end

Alphabet = 'abcdefghijklmnopqrstuvwxyz';

% output dir for the vids
vid_dir=['vids/rams/' nikki '/'];
if ~exist(vid_dir,'dir') && ~islink
   mkdir(vid_dir)
end
